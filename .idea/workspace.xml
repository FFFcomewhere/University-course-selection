<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9f883b19-e419-40dd-a8ed-4de902c8761f" name="变更" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/discovery/discovery.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/discovery/register.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docke-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Api File" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.17.8" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/go.mod" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/go_path/pkg/mod/github.com/zeromicro/go-zero@v1.3.2/core/logx/tracelogger.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/docke-compose.yml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/sdk/go1.17.8/src/context/context.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="minikube" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="27mzJQBVfPKtYFguYHQVE9uTqMV" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DatabaseDriversLRU" value="mysql" />
    <property name="DefaultApiTemplateProperty" value="Api File" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/common" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/common" />
      <recent name="$PROJECT_DIR$/pkg" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/service/shorturl/rpc/transform" />
      <recent name="$PROJECT_DIR$/service/shorturl/rpc" />
      <recent name="$PROJECT_DIR$/etcd" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.University-course-selection">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="University-course-selection" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build University-course-selection/service/user/api" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="University-course-selection" />
      <working_directory value="$PROJECT_DIR$/service/user/api" />
      <kind value="PACKAGE" />
      <package value="University-course-selection/service/user/api" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/service/user/api/user.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build University-course-selection/service/user/rpc" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="University-course-selection" />
      <working_directory value="$PROJECT_DIR$/service/user/rpc" />
      <kind value="PACKAGE" />
      <package value="University-course-selection/service/user/rpc" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/service/user/rpc/user.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build hello.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="University-course-selection" />
      <working_directory value="$PROJECT_DIR$/service/hello" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/service/hello/hello.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build shorturl/api" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="University-course-selection" />
      <working_directory value="$PROJECT_DIR$/service/shorturl/api" />
      <kind value="PACKAGE" />
      <package value="shorturl/api" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/service/shorturl/api/shorturl.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build shorturl.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="University-course-selection" />
      <working_directory value="$PROJECT_DIR$/service/shorturl/api" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/service/shorturl/api/shorturl.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="University-course-selection" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="University-course-selection" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docke-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="hello" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="hello" />
          <option name="containerName" value="hello" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8888" />
                <option name="hostPort" value="8888" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="service/hello/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.University-course-selection" />
      <item itemvalue="Docker.hello" />
      <item itemvalue="Go 构建.go build hello.go" />
      <item itemvalue="Go 构建.go build shorturl/api" />
      <item itemvalue="Go 构建.go build shorturl.go" />
      <item itemvalue="Go 构建.go build University-course-selection/service/user/rpc" />
      <item itemvalue="Go 构建.go build University-course-selection/service/user/api" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build University-course-selection/service/user/api" />
        <item itemvalue="Go 构建.go build University-course-selection/service/user/rpc" />
        <item itemvalue="Go 构建.go build shorturl/api" />
        <item itemvalue="Go 构建.go build shorturl.go" />
        <item itemvalue="Go 构建.go build hello.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="SshConsoleOptionsProvider">
    <option name="myEncoding" value="UTF-8" />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>